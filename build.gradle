plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.openapi.generator" version "5.3.0"
}

group = 'emg.manning'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    springBootVersion = '2.5.6'
    springCloudVersion = '20.0.4'
    lombokVersion = '1.18.22'
    testContainersVersion = '1.16.2'
    restAssuredVersion = '4.4.0'
    mariadbClientVersion = '2.7.4'
    springfoxVersion = '3.0.0'
    openApiToolsVersion = '0.2.1'
    resilience4jVersion = '1.7.1'
    keycloakVersion = '15.0.2'
}

repositories {
    mavenCentral()
}

apply plugin: "io.spring.dependency-management"

dependencyManagement {
    imports {
        mavenBom "org.keycloak.bom:keycloak-adapter-bom:$keycloakVersion"
//        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:$springCloudVersion"
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-webflux:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-security:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-cache:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-data-redis:$springBootVersion"

    implementation "org.mariadb.jdbc:mariadb-java-client:$mariadbClientVersion"
    implementation "io.springfox:springfox-swagger2:$springfoxVersion"
    implementation "io.springfox:springfox-swagger-ui:$springfoxVersion"
    implementation "org.openapitools:jackson-databind-nullable:$openApiToolsVersion"
    implementation "jakarta.validation:jakarta.validation-api"
    implementation "org.hibernate:hibernate-validator:7.0.1.Final"
    implementation "redis.clients:jedis:3.7.0"
    compileOnly "io.github.resilience4j:resilience4j-circuitbreaker:${resilience4jVersion}"
    compileOnly "io.github.resilience4j:resilience4j-circularbuffer:${resilience4jVersion}"
    compileOnly "io.github.resilience4j:resilience4j-spring-boot2:${resilience4jVersion}"
    compileOnly "org.keycloak:keycloak-spring-boot-starter:$keycloakVersion"

    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation "io.rest-assured:spring-mock-mvc:$restAssuredVersion"
    testImplementation "org.testcontainers:testcontainers:$testContainersVersion"
    testImplementation "org.testcontainers:junit-jupiter:$testContainersVersion"
    testImplementation "org.testcontainers:mariadb:$testContainersVersion"
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/open-api/open-banking.yaml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "com.acme.banking.api"
    invokerPackage = "com.acme.banking.invoker"
    modelPackage = "com.acme.banking.model"
}

tasks.register('generateModels', Copy) {
    dependsOn "openApiGenerate"
    from layout.buildDirectory.dir("generated/src/main/java/com/acme/banking/model")
    include "*.java"
    into "$rootDir/src/main/java/com/acme/banking/model"
}

task cleanGenerated(type: Delete) {
    delete "$rootDir/src/main/java/com/"
    followSymlinks = true
}

clean {
    dependsOn "cleanGenerated"
}

test {
    useJUnitPlatform()
}
